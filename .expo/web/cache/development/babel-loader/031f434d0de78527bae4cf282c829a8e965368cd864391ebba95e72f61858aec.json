{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport BottomMenu from \"../components/BottomMenu\";\nimport * as Font from 'expo-font';\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar windowWidth = Dimensions.get('window').width;\nvar windowHeight = Dimensions.get('window').height;\nvar cameraFeedHeight = windowHeight * 2 / 5;\nvar navigation = useNavigation();\nvar ScanScreen = function ScanScreen() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    hasPermission = _useState2[0],\n    setHasPermission = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    scanned = _useState4[0],\n    setScanned = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    fontsLoaded = _useState6[0],\n    setFontsLoaded = _useState6[1];\n  useEffect(function () {\n    _asyncToGenerator(function* () {\n      var _yield$BarCodeScanner = yield BarCodeScanner.requestPermissionsAsync(),\n        status = _yield$BarCodeScanner.status;\n      setHasPermission(status === 'granted');\n    })();\n    function loadFonts() {\n      return _loadFonts.apply(this, arguments);\n    }\n    function _loadFonts() {\n      _loadFonts = _asyncToGenerator(function* () {\n        yield Font.loadAsync({\n          'K2D-ExtraBoldItalic': require(\"../assets/fonts/k2d/K2D-ExtraBoldItalic.ttf\")\n        });\n        setFontsLoaded(true);\n      });\n      return _loadFonts.apply(this, arguments);\n    }\n    loadFonts();\n  }, []);\n  if (!fontsLoaded) {\n    return _jsx(View, {\n      children: _jsx(Text, {\n        children: \"Loading...\"\n      })\n    });\n  }\n  if (hasPermission === null) {\n    return _jsx(Text, {\n      children: \"Requesting for camera permission\"\n    });\n  }\n  if (hasPermission === false) {\n    return _jsx(Text, {\n      children: \"No access to camera\"\n    });\n  }\n  var handleBarCodeScanned = function handleBarCodeScanned(_ref2) {\n    var type = _ref2.type,\n      data = _ref2.data;\n    setScanned(true);\n    navigation.navigate('ArtDetailScreen', {\n      artworkKey: data\n    });\n  };\n  var scanningAreaStyle = {\n    height: cameraFeedHeight,\n    width: windowWidth,\n    marginTop: windowHeight * 1.5 / 5\n  };\n  return _jsxs(SafeAreaView, {\n    style: styles.safeArea,\n    children: [_jsxs(ImageBackground, {\n      source: require(\"../assets/Background.png\"),\n      style: styles.backgroundImage,\n      children: [_jsx(View, {\n        style: styles.header,\n        children: _jsx(Image, {\n          source: require(\"../assets/Art__HeaderText.png\"),\n          style: styles.headerTitle\n        })\n      }), _jsxs(View, {\n        style: styles.cameraContainer,\n        children: [_jsx(BarCodeScanner, {\n          onBarCodeScanned: scanned ? undefined : handleBarCodeScanned,\n          style: StyleSheet.absoluteFillObject\n        }), _jsx(Image, {\n          source: require(\"../assets/ScanFrame.png\"),\n          style: styles.overlay\n        }), scanned && _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return setScanned(false);\n          },\n          style: styles.rescanButton,\n          children: _jsx(Text, {\n            style: styles.rescanButtonText,\n            children: \"Tap to Scan Again\"\n          })\n        })]\n      })]\n    }), _jsx(BottomMenu, {})]\n  });\n};\nvar styles = StyleSheet.create({\n  safeArea: {\n    flex: 1,\n    justifyContent: 'space-between'\n  },\n  backgroundImage: {\n    flex: 1,\n    resizeMode: 'cover'\n  },\n  header: {\n    height: 70,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingTop: 10\n  },\n  headerTitle: {\n    width: windowWidth,\n    height: 50,\n    resizeMode: 'contain'\n  },\n  cameraContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  overlay: {\n    position: 'absolute',\n    height: cameraFeedHeight,\n    width: windowWidth,\n    resizeMode: 'contain'\n  },\n  rescanButton: {\n    position: 'absolute',\n    bottom: 10,\n    alignSelf: 'center',\n    backgroundColor: '#fff',\n    padding: 10,\n    borderRadius: 5\n  },\n  rescanButtonText: {\n    fontSize: 18,\n    color: '#000'\n  }\n});\nexport default ScanScreen;","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","View","Text","TouchableOpacity","Dimensions","Image","ImageBackground","SafeAreaView","BarCodeScanner","BottomMenu","Font","useNavigation","jsx","_jsx","jsxs","_jsxs","windowWidth","get","width","windowHeight","height","cameraFeedHeight","navigation","ScanScreen","_useState","_useState2","_slicedToArray","hasPermission","setHasPermission","_useState3","_useState4","scanned","setScanned","_useState5","_useState6","fontsLoaded","setFontsLoaded","_asyncToGenerator","_yield$BarCodeScanner","requestPermissionsAsync","status","loadFonts","_loadFonts","apply","arguments","loadAsync","require","children","handleBarCodeScanned","_ref2","type","data","navigate","artworkKey","scanningAreaStyle","marginTop","style","styles","safeArea","source","backgroundImage","header","headerTitle","cameraContainer","onBarCodeScanned","undefined","absoluteFillObject","overlay","onPress","rescanButton","rescanButtonText","create","flex","justifyContent","resizeMode","alignItems","paddingTop","position","bottom","alignSelf","backgroundColor","padding","borderRadius","fontSize","color"],"sources":["/Users/2oby/pCloud Box/Projects/WytWallz/Git Repo/WytWallz/src/screens/ScanScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  StyleSheet,\n  View,\n  Text,\n  TouchableOpacity,\n  Dimensions,\n  Image,\n  ImageBackground,\n} from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport BottomMenu from '../components/BottomMenu'; // Make sure this path is correct\nimport * as Font from 'expo-font';\nimport { useNavigation } from '@react-navigation/native';\n\n\nconst windowWidth = Dimensions.get('window').width;\nconst windowHeight = Dimensions.get('window').height;\nconst cameraFeedHeight = (windowHeight * 2) / 5; // Middle 2/5ths of the screen\nconst navigation = useNavigation();\n\n\nconst ScanScreen = () => {\n  const [hasPermission, setHasPermission] = useState(null);\n  const [scanned, setScanned] = useState(false);\n  const [fontsLoaded, setFontsLoaded] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      const { status } = await BarCodeScanner.requestPermissionsAsync();\n      setHasPermission(status === 'granted');\n    })();\n    async function loadFonts() {\n      await Font.loadAsync({\n        'K2D-ExtraBoldItalic': require('../assets/fonts/k2d/K2D-ExtraBoldItalic.ttf'), // Update the path to where your font is located\n        // Include other font weights as needed\n      });\n      setFontsLoaded(true);\n    }\n    loadFonts();\n  }, []);\n\n  if (!fontsLoaded) {\n    return <View><Text>Loading...</Text></View>;\n  }\n\n  if (hasPermission === null) {\n    return <Text>Requesting for camera permission</Text>;\n  }\n\n  if (hasPermission === false) {\n    return <Text>No access to camera</Text>;\n  }\n  \n  const handleBarCodeScanned = ({ type, data }) => {\n    setScanned(true);\n    // Assume data is the artworkKey, or extract it as needed\n    navigation.navigate('ArtDetailScreen', { artworkKey: data });\n  };\n\n\n  // The scanning area (middle 2/5ths of the screen)\n  const scanningAreaStyle = {\n    height: cameraFeedHeight,\n    width: windowWidth,\n    marginTop: windowHeight * 1.5 / 5, // Offset to center vertically\n  };\n\n  return (\n    <SafeAreaView style={styles.safeArea}>\n      <ImageBackground \n        source={require('../assets/Background.png')}\n        style={styles.backgroundImage}\n      >\n        {/* Header */}\n        <View style={styles.header}>\n          <Image source={require('../assets/Art__HeaderText.png')} style={styles.headerTitle} />\n        </View>\n        {/* Camera feed */}\n        <View style={styles.cameraContainer}>\n          <BarCodeScanner\n            onBarCodeScanned={scanned ? undefined : handleBarCodeScanned}\n            style={StyleSheet.absoluteFillObject}\n          />\n          <Image\n            source={require('../assets/ScanFrame.png')} // Replace with the correct path to your PNG file\n            style={styles.overlay}\n          />\n          {scanned && (\n            <TouchableOpacity\n              onPress={() => setScanned(false)}\n              style={styles.rescanButton}\n            >\n              <Text style={styles.rescanButtonText}>Tap to Scan Again</Text>\n            </TouchableOpacity>\n          )}\n        </View>\n      </ImageBackground>\n      <BottomMenu />\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  // ... other styles ...\n  safeArea: {\n    flex: 1,\n    justifyContent: 'space-between',\n  },\n  backgroundImage: {\n    flex: 1,\n    resizeMode: 'cover',\n  },\n  header: {\n    height: 70, // Adjust as needed\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingTop: 10,\n  },\n  headerTitle: {\n    width: windowWidth,\n    height: 50, // Adjust as needed\n    resizeMode: 'contain',\n  },\n  cameraContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  overlay: {\n    position: 'absolute',\n    height: cameraFeedHeight,\n    width: windowWidth,\n    resizeMode: 'contain',\n  },\n  rescanButton: {\n    position: 'absolute',\n    bottom: 10,\n    alignSelf: 'center',\n    backgroundColor: '#fff',\n    padding: 10,\n    borderRadius: 5,\n  },\n  rescanButtonText: {\n    fontSize: 18,\n    color: '#000',\n  },\n  // ... other styles ...\n});\n\nexport default ScanScreen;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}