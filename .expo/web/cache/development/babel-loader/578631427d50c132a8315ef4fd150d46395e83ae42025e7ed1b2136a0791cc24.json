{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport BottomMenu from \"../components/BottomMenu\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar windowWidth = Dimensions.get('window').width;\nvar windowHeight = Dimensions.get('window').height;\nvar ScanScreen = function ScanScreen() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    hasPermission = _useState2[0],\n    setHasPermission = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    scanned = _useState4[0],\n    setScanned = _useState4[1];\n  useEffect(function () {\n    _asyncToGenerator(function* () {\n      var _yield$BarCodeScanner = yield BarCodeScanner.requestPermissionsAsync(),\n        status = _yield$BarCodeScanner.status;\n      setHasPermission(status === 'granted');\n    })();\n  }, []);\n  var handleBarCodeScanned = function handleBarCodeScanned(_ref2) {\n    var type = _ref2.type,\n      data = _ref2.data;\n    setScanned(true);\n    alert(`Bar code with type ${type} and data ${data} has been scanned!`);\n  };\n  if (hasPermission === null) {\n    return _jsx(Text, {\n      children: \"Requesting for camera permission\"\n    });\n  }\n  if (hasPermission === false) {\n    return _jsx(Text, {\n      children: \"No access to camera\"\n    });\n  }\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(BarCodeScanner, {\n      onBarCodeScanned: scanned ? undefined : handleBarCodeScanned,\n      style: styles.barcodeScanner\n    }), scanned && _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return setScanned(false);\n      },\n      style: styles.rescanButton,\n      children: _jsx(Text, {\n        children: \"Tap to Scan Again\"\n      })\n    }), _jsx(BottomMenu, {})]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'flex-end'\n  },\n  barcodeScanner: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    height: windowHeight,\n    width: windowWidth\n  },\n  rescanButton: {\n    flex: 0.1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#fff'\n  }\n});\nexport default ScanScreen;","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","View","Text","TouchableOpacity","Dimensions","SafeAreaView","BarCodeScanner","BottomMenu","jsx","_jsx","jsxs","_jsxs","windowWidth","get","width","windowHeight","height","ScanScreen","_useState","_useState2","_slicedToArray","hasPermission","setHasPermission","_useState3","_useState4","scanned","setScanned","_asyncToGenerator","_yield$BarCodeScanner","requestPermissionsAsync","status","handleBarCodeScanned","_ref2","type","data","alert","children","style","styles","container","onBarCodeScanned","undefined","barcodeScanner","onPress","rescanButton","create","flex","flexDirection","justifyContent","alignItems","backgroundColor"],"sources":["/Users/2oby/pCloud Box/Projects/WytWallz/Git Repo/WytWallz/src/screens/ScanScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  StyleSheet,\n  View,\n  Text,\n  TouchableOpacity,\n  Dimensions,\n} from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport BottomMenu from '../components/BottomMenu'; // Make sure this path is correct\n\nconst windowWidth = Dimensions.get('window').width;\nconst windowHeight = Dimensions.get('window').height;\n\nconst ScanScreen = () => {\n  const [hasPermission, setHasPermission] = useState(null);\n  const [scanned, setScanned] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      const { status } = await BarCodeScanner.requestPermissionsAsync();\n      setHasPermission(status === 'granted');\n    })();\n  }, []);\n\n  const handleBarCodeScanned = ({ type, data }) => {\n    setScanned(true);\n    alert(`Bar code with type ${type} and data ${data} has been scanned!`);\n  };\n\n  if (hasPermission === null) {\n    return <Text>Requesting for camera permission</Text>;\n  }\n\n  if (hasPermission === false) {\n    return <Text>No access to camera</Text>;\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <BarCodeScanner\n        onBarCodeScanned={scanned ? undefined : handleBarCodeScanned}\n        style={styles.barcodeScanner}\n      />\n      {scanned && (\n        <TouchableOpacity\n          onPress={() => setScanned(false)}\n          style={styles.rescanButton}\n        >\n          <Text>Tap to Scan Again</Text>\n        </TouchableOpacity>\n      )}\n      <BottomMenu />\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n  },\n  barcodeScanner: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    height: windowHeight,\n    width: windowWidth,\n  },\n  rescanButton: {\n    flex: 0.1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#fff',\n  },\n});\n\nexport default ScanScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}